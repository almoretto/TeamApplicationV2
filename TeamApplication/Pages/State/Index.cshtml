@page
@model TeamApplication.IndexState

@{
    ViewData["Title"] = "Estados";
}

<h3>Estados</h3>

<p>
    <a asp-page="Create">+Novo</a>
</p>
<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Pesquisa por Nome ou Sigla:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Pesquisar" class="btn btn-primary" /> |
            <a asp-page="./Index">Limpar</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.States[0].UFAbreviation)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.States[0].UFName)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.States)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UFAbreviation)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UFName)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.StateId">Editar</a> |
                    <a asp-page="./Details" asp-route-id="@item.StateId">Abrir</a> |
                    <a asp-page="./Delete" asp-route-id="@item.StateId">Deletar</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.States.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.States.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.States.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Anterior
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.States.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Próxima
</a>